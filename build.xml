<?xml version="1.0" encoding="UTF-8"?>
<project name="vianetz_asyncqueue" default="build" description="Builds the Vianetz_AsyncQueue Magento module.">
    <property file="build/build.properties"/>

    <tstamp>
        <format property="build.time" pattern="%Y%m%d_%H%M%S"/>
    </tstamp>
    <tstamp>
        <format property="build.timestamp" pattern="%s"/>
    </tstamp>

    <fileset dir="${asyncqueue.build.dir}" id="allfiles">
        <include name="**/**"/>

        <!-- ignore Zend Studio/PHPStorm project cruft -->
        <exclude name=".project"/>
        <exclude name=".buildpath"/>
        <exclude name=".settings"/>
        <exclude name=".idea"/>

        <exclude name=".git"/>

        <!-- exclude phing build stuff -->
        <exclude name="build/**"/>
        <exclude name="build.xml"/>

        <!-- exclude mac unwanted files (just for safety) -->
        <exclude name=".DS_Store"/>
    </fileset>

    <property name="src.dir" value="${asyncqueue.build.dir}/src"/>

    <target name="export">
        <mkdir  dir="${asyncqueue.build.dir}" />
        <gitclone repository="${asyncqueue.git.repo}" targetPath="${asyncqueue.build.dir}/." />
        <gitcheckout repository="${asyncqueue.build.dir}" branchname="${asyncqueue.git.branch}" />

        <!-- Get version from config.xml -->
        <php expression="preg_match('#version.*([0-9]+\.[0-9]+\.[0-9]+).*version#', file_get_contents('${src.dir}/app/code/community/Vianetz/AsyncQueue/etc/config.xml') , $m); $retval = $m[1];"
             returnProperty="build.version"/>
        <echo msg="Building Module Version: ${build.version}"/>
    </target>

    <target name="build" depends="export">
        <!-- Replace module version in all relevant files with that from config.xml -->
        <reflexive>
            <fileset refid="allfiles"/>
            <filterchain>
                <replacetokens begintoken="%%" endtoken="%%">
                    <token key="MODULE_VERSION" value="${build.version}"/>
                </replacetokens>
            </filterchain>
        </reflexive>

        <copy todir="${asyncqueue.temp.dir}" includeemptydirs="false">
            <fileset refid="allfiles"/>
        </copy>
    </target>

    <target name="clean">
        <delete dir="${asyncqueue.build.dir}"/>
        <delete dir="${asyncqueue.temp.dir}"/>
    </target>
</project>
